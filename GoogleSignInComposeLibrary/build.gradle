plugins {
    alias libs.plugins.android.library
    alias libs.plugins.ben.manes.versions
    alias libs.plugins.compose.compiler
    alias libs.plugins.detekt
    alias libs.plugins.dokka
    alias libs.plugins.kotlin.android
    alias libs.plugins.ktlint
    id("maven-publish")
}

android {
    namespace "com.joyner.googlesignincomposelibrary"
    compileSdk libs.versions.compileSdk.get() as Integer

    defaultConfig {
        minSdk libs.versions.minSdk.get() as Integer
        targetSdk libs.versions.compileSdk.get() as Integer

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_21
        targetCompatibility JavaVersion.VERSION_21
    }

    buildFeatures {
        compose true
    }

    composeCompiler {
        enableStrongSkippingMode = true
    }

    publishing {
        singleVariant("release") {
            withSourcesJar()
        }
    }
}

publishing {
    publications {
        release(MavenPublication) {
            groupId = 'com.github.joyner-perez'
            artifactId = 'GoogleSignInButtonLibrary'
            version = '3.0.7'

            afterEvaluate {
                from components.release
            }
        }
    }
    repositories {
        maven {
            name = 'local'
            url = layout.buildDirectory.dir("repo")
        }
    }
}

dokka {
    dokkaPublications.html {
        outputDirectory.set(layout.buildDirectory.dir("dokkaDir"))
    }
}

dependencies {
    implementation libs.activity.compose
    implementation libs.material3
    implementation libs.ui.compose
    implementation libs.ui.tooling.preview
    implementation libs.core.ktx
    implementation libs.play.services.auth
    implementation libs.credentials
    implementation libs.credentials.play.services
    implementation libs.google.id
    implementation platform (libs.compose.bom)
    testImplementation libs.junit
    androidTestImplementation libs.ui.test.junit4
    androidTestImplementation libs.ext.junit
    androidTestImplementation libs.espresso.core
    debugImplementation libs.ui.test.manifest
    debugImplementation libs.ui.tooling.compose
    detektPlugins libs.detekt.formatting
    detektPlugins libs.detekt.rules.libraries
    detektPlugins libs.detekt.rules.compose
    detektPlugins libs.detekt.rules.ruleauthors
    dokkaPlugin libs.dokka.android
}

def isNonStable = { String version ->
    def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { it -> version.toUpperCase().contains(it) }
    def regex = /^[0-9,.v-]+(-r)?$/
    return !stableKeyword && !(version ==~ regex)
}

tasks.named("dependencyUpdates").configure {
    rejectVersionIf {
        isNonStable(it.candidate.version)
    }
}
